c
asm-prof 
si
b *0x0000000000102c64
c
c
si
x/21xg $rsp
c
si
x/21xg $rsp
c
si
x/21xg $rsp
c
q
src-prof 
b run_shell
c
q
b run_shell
src-prof 
c
q
b run_shell
b help
b info
c
q
src-prof 
exit
c
q
src-prof 
b create_process
c
n
b _irq00Handler 
n
finish
exit
b create_process
c
n
b _irq00Handler 
c
asm-prof 
si
b *0x0000000000102c64
c
si
x/21xg $rsp
x/i 0x0000000000a01352
c
si
x/21xg $rsp
x/i 0x0000000000a01352
x/i *0x0000000000a01352
x/i 0x0000000000a01352
c
c
si
x/21xg $rsp
c
del 1
de l2
del 2
del 3
c
q
x/i 0000000000a01a8c 
x/i *0000000000a01a8c 
x/i *0x0000000000a01a8c 
c
exit
src-prof 
b create_process
c
n
x/i 0x0000000000A01352
q
src-prof 
b create_process_1 
c
b create_process
c
n
x/i 0x0000000000A01352
x/i *0x0000000000A01352
x/i 0x0000000000A01352
q
src-prof 
b create_process_1
c
n
x/i 0x0000000000A01352
c
exity
exit
x/i 0x0000000000A01352
exit
src-prof 
b create_process_1
c
b create_process
c
n
x/i 0x0000000000A01352
c
exit
x/i 0x0000000000a01a8c
b *0x0000000000a01a8c
q
c
exit
c
exit
src-prof 
b create_process_1 
c
b create_process
n
print *0xa121cb
print(*0xa121cb)
print(0xa121cb)
print Process
print "Process"
print argv_process[0]
c
n
print argv[0]
n
print stack->rsi[0]
print stack->rsi
print (*16785320)[0]
b *0x0000000000A01352
c
n
print argv[0]
c
exit
x/i 0000000000a01a94
x/i 0x0000000000a01a94
exit
b sys_create_process
del 1
b create_process_1 
c
b sys_create_process
c
asm-prof 
b create_process
c
src-prof 
print *0x0000000001001FA8
print **0x0000000001001FA8
print (char**)0x0000000001001FA8
print (char**)0x0000000001001FA8[0]
print ((char**)0x0000000001001FA8)[0]
c
n
print (*0x1001fa8)
print (*0x1001fa8)[0]
print argv[0]
n
print process_table[i]->process_name
print stack->rsi
print *stack->rsi
print ((char**)stack->rsi)[0]
b _irq00Handler 
c
asm-prof 
si
b *0x0000000000102c68
c
c
x/21xg $rsp
q
src-prof 
b create_process_1
c
b create_process
c
n
b _irq00Handler 
c
asm-prof 
c
si
b *0x0000000000102c68
c
cexit
exit
src-prof 
b create_process_1
c
b create_process
c
n
b _irq00Handler 
c
asm-prof 
si
info break
del 1
del 2
del 3
b *0x0000000000102c61
c
si
x/21xg $rsp
print ((char**)0x0000000001001fa8)[0]
print (char**)0x0000000001001fa8
print (char*)0x1001fa8
print ((char*)0x1001fa8)[0]
print ((char*)0x0000000001001fa8)[0]
print ((char*+)0x0000000001001fa8)[0]
print ((char**)0x0000000001001fa8)[0]
print (char*)0x0000000001001fa8
print (char*)0x0000000001001fa8[0]
print ((char*)0x0000000001001fa8)[0]
exit
src-prof 
b create_process_1
c
n
n
print argv_process[0]
b create_process
c
n
print ((char**)stack->rsi)[0]
b _irq00Handler 
info break
del 1
del 2
c
asm-prof 
si
b *0x0000000000102c61
info break
del 3
c
si
x/21xg $rsp
c
del 4
c
exit
b *0x0000000000A01352
c
n
print argv[0]
n
c
q
